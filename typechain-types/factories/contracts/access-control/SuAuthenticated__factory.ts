/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  SuAuthenticated,
  SuAuthenticatedInterface,
} from "../../../contracts/access-control/SuAuthenticated";

const _abi = [
  {
    inputs: [],
    name: "BadAccessControlSingleton",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAdminError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAlerterError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDAOError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyLiquidationAccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMintAccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRewardAccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRoleError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVaultAccessError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCESS_CONTROL_SINGLETON",
    outputs: [
      {
        internalType: "contract ISuAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ALERTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAO_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDATION_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULT_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class SuAuthenticated__factory {
  static readonly abi = _abi;
  static createInterface(): SuAuthenticatedInterface {
    return new utils.Interface(_abi) as SuAuthenticatedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuAuthenticated {
    return new Contract(address, _abi, signerOrProvider) as SuAuthenticated;
  }
}
