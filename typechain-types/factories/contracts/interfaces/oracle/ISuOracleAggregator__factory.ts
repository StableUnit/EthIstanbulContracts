/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISuOracleAggregator,
  ISuOracleAggregatorInterface,
} from "../../../../contracts/interfaces/oracle/ISuOracleAggregator";

const _abi = [
  {
    inputs: [],
    name: "BadOracleId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "NoOracleFound",
    type: "error",
  },
  {
    inputs: [],
    name: "NoOracleImplementation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "assetToOracle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getFiatPrice1e18",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleId",
        type: "uint256",
      },
    ],
    name: "oracleImplementations",
    outputs: [
      {
        internalType: "contract ISuOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "oracleId",
        type: "uint256",
      },
    ],
    name: "setOracleIdForAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleId",
        type: "uint256",
      },
      {
        internalType: "contract ISuOracle",
        name: "oracleImplementation",
        type: "address",
      },
    ],
    name: "setOracleImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISuOracleAggregator__factory {
  static readonly abi = _abi;
  static createInterface(): ISuOracleAggregatorInterface {
    return new utils.Interface(_abi) as ISuOracleAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISuOracleAggregator {
    return new Contract(address, _abi, signerOrProvider) as ISuOracleAggregator;
  }
}
