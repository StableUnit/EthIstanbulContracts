/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISuUniV3Oracle,
  ISuUniV3OracleInterface,
} from "../../../../contracts/interfaces/oracle/ISuUniV3Oracle";

const _abi = [
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "assetToPool",
    outputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_fee",
        type: "uint24",
      },
    ],
    name: "enableAssetPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getFiatPrice1e18",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ISuUniV3Oracle__factory {
  static readonly abi = _abi;
  static createInterface(): ISuUniV3OracleInterface {
    return new utils.Interface(_abi) as ISuUniV3OracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISuUniV3Oracle {
    return new Contract(address, _abi, signerOrProvider) as ISuUniV3Oracle;
  }
}
