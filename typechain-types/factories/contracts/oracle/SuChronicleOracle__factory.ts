/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SuChronicleOracle,
  SuChronicleOracleInterface,
} from "../../../contracts/oracle/SuChronicleOracle";

const _abi = [
  {
    inputs: [],
    name: "BadAccessControlSingleton",
    type: "error",
  },
  {
    inputs: [],
    name: "BadPriceAnswer",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAdminError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAlerterError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDAOError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyLiquidationAccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMintAccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRewardAccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRoleError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVaultAccessError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCESS_CONTROL_SINGLETON",
    outputs: [
      {
        internalType: "contract ISuAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ALERTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAO_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDATION_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULT_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetToFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetToFeedDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getFiatPrice1e18",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_authControl",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "chronicleDataFeed",
        type: "address",
      },
    ],
    name: "setAssetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b05806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c806301ffc9a7146100bf57806303ee9f22146100e757806314c376dc1461011857806317d9c94e1461014d578063438280dd1461018257806371d0fb41146101a957806375b238fc146101d05780638e5313e0146101d8578063b9ac2b38146101ff578063c4d66de814610212578063dc97e84e14610227578063e6741de21461024e578063e9c2651814610277578063fd6fa5231461028c575b600080fd5b6100d26100cd3660046107cf565b61029f565b60405190151581526020015b60405180910390f35b600054610100906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016100de565b61013f7fe965846df3dd5b1dfa65f58e31477079e90140e0908b6dd31b5aead5a57cf36581565b6040519081526020016100de565b61017061015b366004610815565b60026020526000908152604090205460ff1681565b60405160ff90911681526020016100de565b61013f7f39f61ca2a1a28fee144218173ec637b649a353e4026b2738c673800e5bf1437b81565b61013f7f880a91047114272656e533301261260c75e4d11543ac7303d6fe4204579ec72781565b61013f600081565b61013f7fe453bacb314e78dcd5192e6b1a2b1f0e7c76e92f6b7e429a6a90f04e39db3b7681565b61013f61020d366004610815565b61031c565b610225610220366004610815565b610458565b005b61013f7f9a9aef7c1247d5fc769b0185c052913e39673da29a880317dfd20ebf86f26a4981565b61010061025c366004610815565b6001602052600090815260409020546001600160a01b031681565b61013f600080516020610ab083398151915281565b61022561029a366004610830565b610570565b600080546040516301ffc9a760e01b8152620100009091046001600160a01b0316906301ffc9a7906102d5908590600401610863565b602060405180830381865afa1580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103169190610878565b92915050565b6001600160a01b03808216600090815260016020526040808220548151633fabe5a360e21b81529151929316918391839163feaf968c9160048082019260a0929091908290030181865afa158015610378573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039c91906108b1565b505050915050600081136103c3576040516321d0ed8560e11b815260040160405180910390fd5b60006001600160a01b0385161561043b57846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104369190610901565b61043e565b60125b9050600061044e83836012610640565b9695505050505050565b600054610100900460ff16158080156104785750600054600160ff909116105b806104925750303b158015610492575060005460ff166001145b6104fa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561051d576000805461ff0019166101001790555b610526826106b3565b801561056c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b600054604051632474521560e21b8152600080516020610ab08339815191526004820152336024820152620100009091046001600160a01b0316906391d1485490604401602060405180830381865afa1580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f59190610878565b6106125760405163599a6c3360e11b815260040160405180910390fd5b6001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b60008160ff168360ff1610156106795761065a838361093a565b6106689060ff16600a610a37565b6106729085610a43565b90506106ac565b8160ff168360ff1611156106a957610691828461093a565b61069f9060ff16600a610a37565b6106729085610a73565b50825b9392505050565b600054610100900460ff1661071e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104f1565b6000805462010000600160b01b031916620100006001600160a01b038416908102919091179091556040516301ffc9a760e01b81526301ffc9a79061076e90637965db0b60e01b90600401610863565b602060405180830381865afa15801561078b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107af9190610878565b6107cc576040516384d942fd60e01b815260040160405180910390fd5b50565b6000602082840312156107e157600080fd5b81356001600160e01b0319811681146106ac57600080fd5b80356001600160a01b038116811461081057600080fd5b919050565b60006020828403121561082757600080fd5b6106ac826107f9565b6000806040838503121561084357600080fd5b61084c836107f9565b915061085a602084016107f9565b90509250929050565b6001600160e01b031991909116815260200190565b60006020828403121561088a57600080fd5b815180151581146106ac57600080fd5b80516001600160501b038116811461081057600080fd5b600080600080600060a086880312156108c957600080fd5b6108d28661089a565b94506020860151935060408601519250606086015191506108f56080870161089a565b90509295509295909350565b60006020828403121561091357600080fd5b815160ff811681146106ac57600080fd5b634e487b7160e01b600052601160045260246000fd5b60ff828116828216039081111561031657610316610924565b600181815b8085111561098e57816000190482111561097457610974610924565b8085161561098157918102915b93841c9390800290610958565b509250929050565b6000826109a557506001610316565b816109b257506000610316565b81600181146109c857600281146109d2576109ee565b6001915050610316565b60ff8411156109e3576109e3610924565b50506001821b610316565b5060208310610133831016604e8410600b8410161715610a11575081810a610316565b610a1b8383610953565b8060001904821115610a2f57610a2f610924565b029392505050565b60006106ac8383610996565b80820260008212600160ff1b84141615610a5f57610a5f610924565b818105831482151761031657610316610924565b600082610a9057634e487b7160e01b600052601260045260246000fd5b600160ff1b821460001984141615610aaa57610aaa610924565b50059056fe3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b2603a26469706673582212209441ea7bef84366aef4c6aa17ed98b7fd081026f0281072a4c626003f87c9b9a64736f6c63430008110033";

type SuChronicleOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SuChronicleOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SuChronicleOracle__factory extends ContractFactory {
  constructor(...args: SuChronicleOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SuChronicleOracle> {
    return super.deploy(overrides || {}) as Promise<SuChronicleOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SuChronicleOracle {
    return super.attach(address) as SuChronicleOracle;
  }
  override connect(signer: Signer): SuChronicleOracle__factory {
    return super.connect(signer) as SuChronicleOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuChronicleOracleInterface {
    return new utils.Interface(_abi) as SuChronicleOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuChronicleOracle {
    return new Contract(address, _abi, signerOrProvider) as SuChronicleOracle;
  }
}
