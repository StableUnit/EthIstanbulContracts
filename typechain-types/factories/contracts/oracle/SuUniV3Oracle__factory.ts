/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SuUniV3Oracle,
  SuUniV3OracleInterface,
} from "../../../contracts/oracle/SuUniV3Oracle";

const _abi = [
  {
    inputs: [],
    name: "BadAccessControlSingleton",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAdminError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAlerterError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDAOError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyLiquidationAccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMintAccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRewardAccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRoleError",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVaultAccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCESS_CONTROL_SINGLETON",
    outputs: [
      {
        internalType: "contract ISuAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ALERTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAO_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDATION_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORACLE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNISWAP_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VAULT_ACCESS_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetToPool",
    outputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_fee",
        type: "uint24",
      },
    ],
    name: "enableAssetPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getFiatPrice1e18",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_authControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_UNISWAP_FACTORY",
        type: "address",
      },
      {
        internalType: "address",
        name: "_USDT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ORACLE",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611531806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c806301ffc9a7146100d557806303ee9f22146100fd578063044c8d711461012357806314c376dc1461014c57806338013f0214610181578063438280dd1461019457806371d0fb41146101bb57806375b238fc146101e25780638e5313e0146101ea578063b9ac2b3814610211578063c54e44eb14610224578063c74c0fac14610237578063d3a6fc991461024a578063dc97e84e1461025f578063e9c2651814610286578063f8c8765e146102ad575b600080fd5b6100e86100e3366004611072565b6102c0565b60405190151581526020015b60405180910390f35b600054610116906201000090046001600160a01b031681565b6040516100f4919061109c565b6101166101313660046110c5565b6001602052600090815260409020546001600160a01b031681565b6101737fe965846df3dd5b1dfa65f58e31477079e90140e0908b6dd31b5aead5a57cf36581565b6040519081526020016100f4565b600454610116906001600160a01b031681565b6101737f39f61ca2a1a28fee144218173ec637b649a353e4026b2738c673800e5bf1437b81565b6101737f880a91047114272656e533301261260c75e4d11543ac7303d6fe4204579ec72781565b610173600081565b6101737fe453bacb314e78dcd5192e6b1a2b1f0e7c76e92f6b7e429a6a90f04e39db3b7681565b61017361021f3660046110c5565b61033d565b600354610116906001600160a01b031681565b600254610116906001600160a01b031681565b61025d6102583660046110e2565b6103f8565b005b6101737f9a9aef7c1247d5fc769b0185c052913e39673da29a880317dfd20ebf86f26a4981565b6101737f3b5d4cc60d3ec3516ee8ae083bd60934f6eb2a6c54b1229985c41bfb092b260381565b61025d6102bb366004611123565b6104c8565b600080546040516301ffc9a760e01b8152620100009091046001600160a01b0316906301ffc9a7906102f690859060040161117f565b602060405180830381865afa158015610313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103379190611194565b92915050565b6001600160a01b038082166000908152600160205260408120549091670de0b6b3a76400009161037191168483600a610620565b60048054600354604051631735856760e31b81526001600160a01b039283169363b9ac2b38936103a39316910161109c565b602060405180830381865afa1580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e491906111b6565b6103ee91906111e5565b6103379190611212565b60008054604051632474521560e21b815260048101929092523360248301526201000090046001600160a01b0316906391d1485490604401602060405180830381865afa15801561044d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104719190611194565b61048e57604051631886ea7d60e11b815260040160405180910390fd5b6104988282610902565b6001600160a01b03928316600090815260016020526040902080546001600160a01b031916919093161790915550565b600054610100900460ff16158080156104e85750600054600160ff909116105b806105025750303b158015610502575060005460ff166001145b61056a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561058d576000805461ff0019166101001790555b61059685610934565b600280546001600160a01b038087166001600160a01b0319928316179092556003805486841690831617905560048054928516929091169190911790558015610619576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b600080856001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190611226565b90506000866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106eb9190611226565b9050816001600160a01b0316866001600160a01b0316141580156107215750806001600160a01b0316866001600160a01b031614155b1561073f5760405163c1ab6dc160e01b815260040160405180910390fd5b6000826001600160a01b0316876001600160a01b0316146107605782610762565b815b6040805160028082526060820183529293506000929091602083019080368337019050509050858160008151811061079c5761079c611259565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106107cb576107cb611259565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b038b169063883bdbfd9061080f90859060040161126f565b600060405180830381865afa15801561082c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108549190810190611380565b50905060008160008151811061086c5761086c611259565b60200260200101518260018151811061088757610887611259565b6020026020010151610899919061144b565b905060006108ad63ffffffff8a1683611478565b905060008260060b1280156108d357506108cd63ffffffff8a16836114b6565b60060b15155b156108e657806108e2816114d8565b9150505b6108f2818b8d88610a50565b9c9b505050505050505050505050565b60025460035460009161092d916001600160a01b03918216916109289187911686610b59565b610bc4565b9392505050565b600054610100900460ff1661099f5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610561565b6000805462010000600160b01b031916620100006001600160a01b038416908102919091179091556040516301ffc9a760e01b81526301ffc9a7906109ef90637965db0b60e01b9060040161117f565b602060405180830381865afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190611194565b610a4d576040516384d942fd60e01b815260040160405180910390fd5b50565b600080610a5c86610ca8565b90506001600160801b036001600160a01b03821611610ae2576000610a8a6001600160a01b038316806111e5565b9050836001600160a01b0316856001600160a01b031610610ac257610abd600160c01b876001600160801b031683610fc0565b610ada565b610ada81876001600160801b0316600160c01b610fc0565b925050610b50565b6000610afc6001600160a01b03831680600160401b610fc0565b9050836001600160a01b0316856001600160a01b031610610b3457610b2f600160801b876001600160801b031683610fc0565b610b4c565b610b4c81876001600160801b0316600160801b610fc0565b9250505b50949350505050565b6040805160608101825260008082526020820181905291810191909152826001600160a01b0316846001600160a01b03161115610b94579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b031610610bec57600080fd5b815160208084015160408086015181516001600160a01b0395861681860152949092168482015262ffffff90911660608085019190915281518085038201815260808501909252815191909201206001600160f81b031960a08401529085901b6001600160601b03191660a183015260b58201527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d582015260f50160408051601f1981840301815291905280516020909101209392505050565b60008060008360020b12610cbf578260020b610cc7565b8260020b6000035b9050620d89e8811115610ced576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003610d0457600160801b610d16565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b031690506002821615610d40576ffff97272373d413259a46990580e213a0260801c5b6004821615610d5f576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610d7e576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610d9d576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610dbc576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610ddb576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610dfa576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610e1a576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610e3a576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610e5a576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610e7a576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610e9a576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610eba576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610eda576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610efa576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610f1b576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610f3b576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610f5a576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610f77576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610f98578060001981610f9457610f946111fc565b0490505b600160201b810615610fab576001610fae565b60005b60ff16602082901c0192505050919050565b6000808060001985870985870292508281108382030391505080600003610ff95760008411610fee57600080fd5b50829004905061092d565b80841161100557600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60006020828403121561108457600080fd5b81356001600160e01b03198116811461092d57600080fd5b6001600160a01b0391909116815260200190565b6001600160a01b0381168114610a4d57600080fd5b6000602082840312156110d757600080fd5b813561092d816110b0565b600080604083850312156110f557600080fd5b8235611100816110b0565b9150602083013562ffffff8116811461111857600080fd5b809150509250929050565b6000806000806080858703121561113957600080fd5b8435611144816110b0565b93506020850135611154816110b0565b92506040850135611164816110b0565b91506060850135611174816110b0565b939692955090935050565b6001600160e01b031991909116815260200190565b6000602082840312156111a657600080fd5b8151801515811461092d57600080fd5b6000602082840312156111c857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610337576103376111cf565b634e487b7160e01b600052601260045260246000fd5b600082611221576112216111fc565b500490565b60006020828403121561123857600080fd5b815161092d816110b0565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156112ad57835163ffffffff168352928401929184019160010161128b565b50909695505050505050565b604051601f8201601f191681016001600160401b03811182821017156112e1576112e1611243565b604052919050565b60006001600160401b0382111561130257611302611243565b5060051b60200190565b600082601f83011261131d57600080fd5b8151602061133261132d836112e9565b6112b9565b82815260059290921b8401810191818101908684111561135157600080fd5b8286015b84811015611375578051611368816110b0565b8352918301918301611355565b509695505050505050565b6000806040838503121561139357600080fd5b82516001600160401b03808211156113aa57600080fd5b818501915085601f8301126113be57600080fd5b815160206113ce61132d836112e9565b82815260059290921b840181019181810190898411156113ed57600080fd5b948201945b8386101561141b5785518060060b811461140c5760008081fd5b825294820194908201906113f2565b9188015191965090935050508082111561143457600080fd5b506114418582860161130c565b9150509250929050565b600682810b9082900b03667fffffffffffff198112667fffffffffffff82131715610337576103376111cf565b60008160060b8360060b8061148f5761148f6111fc565b667fffffffffffff198214600019821416156114ad576114ad6111cf565b90059392505050565b60008260060b806114c9576114c96111fc565b808360060b0791505092915050565b60008160020b627fffff1981036114f1576114f16111cf565b600019019291505056fea2646970667358221220106db9ab65e2390a2b93afae534b97815ee8e86e50f2e83c63962300290112af64736f6c63430008110033";

type SuUniV3OracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SuUniV3OracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SuUniV3Oracle__factory extends ContractFactory {
  constructor(...args: SuUniV3OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SuUniV3Oracle> {
    return super.deploy(overrides || {}) as Promise<SuUniV3Oracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SuUniV3Oracle {
    return super.attach(address) as SuUniV3Oracle;
  }
  override connect(signer: Signer): SuUniV3Oracle__factory {
    return super.connect(signer) as SuUniV3Oracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuUniV3OracleInterface {
    return new utils.Interface(_abi) as SuUniV3OracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuUniV3Oracle {
    return new Contract(address, _abi, signerOrProvider) as SuUniV3Oracle;
  }
}
