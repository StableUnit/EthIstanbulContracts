/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockOracle,
  MockOracleInterface,
} from "../../../contracts/mocks/MockOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FIAT_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getFiatPrice1e18",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFiatPrice1e18",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
    ],
    name: "setFiatPrice1e18Array",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105fe8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80634cf0aef2146100725780635361543414610087578063715018a6146100bf5780638da5cb5b146100c75780639814cb2e146100e7578063b9ac2b38146100fa578063f2fde38b1461011b575b600080fd5b610085610080366004610410565b61012e565b005b6100a96040518060400160405280600381526020016222aaa960e91b81525081565b6040516100b6919061043a565b60405180910390f35b610085610166565b6100cf61017a565b6040516001600160a01b0390911681526020016100b6565b6100856100f536600461049e565b610189565b61010d61010836600461056e565b6101b2565b6040519081526020016100b6565b61008561012936600461056e565b61026c565b60408051602080820183528382526001600160a01b03851660009081526001918290529290922061016192909190610394565b505050565b61016e6102e5565b6101786000610344565b565b6000546001600160a01b031690565b6001600160a01b0382166000908152600160209081526040909120825161016192840190610394565b6001600160a01b038116600090815260016020526040812054806102275760405162461bcd60e51b815260206004820152602160248201527f4d6f636b4f7261636c653a2061737365742069736e277420737570706f7274656044820152601960fa1b60648201526084015b60405180910390fd5b6001600160a01b03831660009081526001602052604090206102498243610590565b81548110610259576102596105b2565b9060005260206000200154915050919050565b6102746102e5565b6001600160a01b0381166102d95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161021e565b6102e281610344565b50565b336102ee61017a565b6001600160a01b0316146101785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161021e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156103cf579160200282015b828111156103cf5782518255916020019190600101906103b4565b506103db9291506103df565b5090565b5b808211156103db57600081556001016103e0565b80356001600160a01b038116811461040b57600080fd5b919050565b6000806040838503121561042357600080fd5b61042c836103f4565b946020939093013593505050565b600060208083528351808285015260005b818110156104675785810183015185820160400152820161044b565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156104b157600080fd5b6104ba836103f4565b91506020838101356001600160401b03808211156104d757600080fd5b818601915086601f8301126104eb57600080fd5b8135818111156104fd576104fd610488565b8060051b604051601f19603f8301168101818110858211171561052257610522610488565b60405291825284820192508381018501918983111561054057600080fd5b938501935b8285101561055e57843584529385019392850192610545565b8096505050505050509250929050565b60006020828403121561058057600080fd5b610589826103f4565b9392505050565b6000826105ad57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220d0d51caeb2c2a557ce8df8b601ed687d41143ce6ebeb13e358a80d09bac670e464736f6c63430008110033";

type MockOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOracle__factory extends ContractFactory {
  constructor(...args: MockOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockOracle> {
    return super.deploy(overrides || {}) as Promise<MockOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockOracle {
    return super.attach(address) as MockOracle;
  }
  override connect(signer: Signer): MockOracle__factory {
    return super.connect(signer) as MockOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOracleInterface {
    return new utils.Interface(_abi) as MockOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockOracle {
    return new Contract(address, _abi, signerOrProvider) as MockOracle;
  }
}
